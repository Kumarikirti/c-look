#include <iostream>
#include <cstdlib>
#include <conio.h>
#include <math.h>

using namespace std;

int compare (const void * y, const void * z)
{
  if ( *(int*)y <  *(int*)z ) return -1;
  if ( *(int*)y == *(int*)z ) return 0;
  if ( *(int*)y >  *(int*)z ) return 1;
}
void shift(int y[],const int size)
{
    for(int i=1;i<=size;i++)
        y[i-1]=y[i];
}
class disk
{
private :
    int request[101];
int sorted_request[101];
int number_of_request;
int max;
int direction;
public :
disk()
{
    cout<<"\nEnter maximum disk limit : ";
    cin>>max;
}

void receive_request()
{
    enter_request_number:
    cout<<"\nEnter number of requests (max. 100): ";
    cin>>number_of_request;
    if(number_of_request>100)
        goto enter_request_number;

    current_location:
    cout<<"\nEnter current location : ";
    cin>>request[0];
    sorted_request[0]=request[0];
    if(request[0]>max||request[0]<0)
        goto current_location;

    current_direction:
    cout<<"\nEnter current direction(0:left / 1:right) : ";
    cin>>direction;
    if(direction!=0&&direction!=1)
        goto current_direction;


    for(int i=1;i<=number_of_request;i++)
    {
        cout<<"\nEnter request number "<<i<<" : ";
        cin>>request[i];
        sorted_request[i]=request[i];
        if(request[i]>max||request[i]<0)
        {
            cout<<"\nInvalid request !! Enter again!!";
            i--;
        }
    }
    qsort(sorted_request+1,number_of_request,sizeof(int),compare);

}


int CLOOK()
{
    int head_movement=0,flag=0;

    for(int i=1;i<=number_of_request;i++)
        if(sorted_request[i]>sorted_request[0]&&flag==0)
            flag=i;

    if(flag==1)
        head_movement+=sorted_request[number_of_request]-sorted_request[0];
    else 
    {
        head_movement+=sorted_request[number_of_request]-sorted_request[0];
        head_movement+=sorted_request[number_of_request]-sorted_request[1];
        head_movement+=sorted_request[flag-1]-sorted_request[1];
    }   

    return head_movement;
}
~disk(){}
};

int main()
{
    disk hdd;
    hdd.receive_request();
    cout<<"Total head movement in ";
    cout<<"CLOOK is "<<hdd.CLOOK()<<endl;
    _getche();
}  
